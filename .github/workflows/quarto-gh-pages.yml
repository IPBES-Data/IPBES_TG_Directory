name: Build and Publish (Quarto)

on:
  push:
    branches:
      - main
      - master
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup R (for directory generator)
        uses: r-lib/actions/setup-r@v2
        with:
          use-public-rspm: true
          extra-packages: |
              jsonlite
              yaml
              httr2

      - name: Generate directory listing from remote metadata
        run: |
          Rscript ./scripts/generate_directory_from_remote.R

      - name: Export QMD front matter to metadata_qmd.yaml
        run: |
          bash ./scripts/export_frontmatter.sh index.qmd
      
      - name: Detect R usage and packages
        run: |
          bash ./scripts/detect_r_packages.sh index.qmd || true
          if [ -f R.pkgs ]; then echo "Detected R packages:"; cat R.pkgs; fi

      - name: Setup Quarto
        uses: quarto-dev/quarto-actions/setup@v2

      - name: Install R packages
        if: hashFiles('R.pkgs') != ''
        run: |
          Rscript - <<'RS'
          pkgs <- readLines("R.pkgs"); pkgs <- pkgs[nzchar(pkgs)]
          if (length(pkgs)) {
            repos <- getOption("repos")
            if (!nzchar(repos["CRAN"]) && nzchar(Sys.getenv("RSPM"))) {
              repos["CRAN"] <- Sys.getenv("RSPM")
            }
            install.packages(pkgs, repos = repos)
          }
          RS

      - name: Render index.qmd to HTML and GFM
        run: |
          quarto render index.qmd --to html --output index.html

      - name: Prepare publish dir
        run: |
          rm -rf public
          mkdir -p public
          cp index.html public/
          if [ -f metadata_qmd.yaml ]; then cp metadata_qmd.yaml public/; fi
          if [ -f R.pkgs ]; then cp R.pkgs public/; fi

      - name: Publish to gh-pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: public
          # Set to false to create .nojekyll and bypass Jekyll processing
          enable_jekyll: false
